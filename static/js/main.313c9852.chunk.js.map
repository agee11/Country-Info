{"version":3,"sources":["components/Header.js","containers/HeaderContainer.js","actions/index.js","components/Search.js","components/Filter.js","containers/FilterContainer.js","components/SearchSection.js","containers/SearchContainer.js","components/CountryCard.js","components/CardContainer.js","containers/FlagCards.js","App.js","reducers/filter.js","reducers/darkmode.js","reducers/search.js","reducers/index.js","index.js"],"names":["Header","props","handleDarkMode","bind","this","toggleDarkMode","Navbar","expand","bg","darkmode","variant","Brand","Button","onClick","className","React","Component","connect","state","dispatch","type","Search","input","handleSearch","event","updateSearch","target","value","Form","Control","style","placeholder","onChange","Filter","handleFilter","console","log","setFilter","DropdownButton","title","Dropdown","Item","onSelect","eventKey","region","filter","SearchSection","FilterContainer","text","CountryCard","Card","width","Img","height","src","countryInfo","flag","Body","Title","name","Text","population","toLocaleString","capital","CardContainer","cards","fetch","then","res","json","result","setState","error","deck","country","search","toLowerCase","includes","map","index","key","App","HeaderContainer","FlagCards","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.313c9852.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Header.css\";\r\n\r\nclass Header extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.handleDarkMode = this.handleDarkMode.bind(this);\r\n  }\r\n\r\n  handleDarkMode(){\r\n    this.props.toggleDarkMode();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Navbar expand=\"true\" bg={this.props.darkmode ? \"dark\" : \"light\"} variant={this.props.darkmode ? \"dark\" : \"light\"}>\r\n      <Navbar.Brand>Where in the world?</Navbar.Brand>\r\n      <Button onClick={this.handleDarkMode} variant={this.props.darkmode ? \"dark\" : \"light\"}><i className=\"fas fa-moon\"></i> Dark Mode</Button>\r\n    </Navbar>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import {connect} from \"react-redux\";\r\nimport Header from \"../components/Header.js\";\r\nimport {toggleDarkMode} from \"../actions\";\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    toggleDarkMode: () => dispatch(toggleDarkMode())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","\r\nexport function toggleDarkMode() {\r\n  return {\r\n    type: \"DARKMODE\"\r\n  }\r\n}\r\n\r\nexport function setFilter(region){\r\n  return {\r\n    type: \"FILTER\",\r\n    region\r\n  }\r\n}\r\n\r\nexport function updateSearch(text){\r\n  return {\r\n    type: \"SEARCH\",\r\n    text\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Search extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: \"\"\r\n    }\r\n\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  handleSearch(event){\r\n    this.props.updateSearch(event.target.value);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Form.Control style={this.props.darkmode ? {\"background-color\" : \"#343a40\"} : {\"background-color\" : \"#fff\"}}className=\"flex-40\" type=\"input\" placeholder=\"Search for a country...\" onChange={this.handleSearch}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nclass Filter extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n  }\r\n\r\n  handleFilter(event){\r\n    console.log(event);\r\n    this.props.setFilter(event);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <DropdownButton variant={this.props.darkmode ? \"dark\" : \"light\"} title=\"Filter by Region\">\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"\">All</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Africa\">Africa</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Americas\">Americas</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Asia\">Asia</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Europe\">Europe</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Oceania\">Oceania</Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import {connect} from \"react-redux\";\r\nimport Filter from \"../components/Filter.js\";\r\nimport {setFilter} from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode,\r\n    region: state.filter\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    setFilter: (region) => dispatch(setFilter(region))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Search from \"./Search.js\";\r\nimport FilterContainer from \"../containers/FilterContainer.js\";\r\nimport \"../styles/SearchContainer.css\"\r\n\r\nclass SearchSection extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"search-container\" style={this.props.darkmode ? {\"background-color\": \"#212428\"} : {\"background-color\": \"#fff\"}}>\r\n        <Search darkmode={this.props.darkmode} updateSearch={this.props.updateSearch}/>\r\n        <FilterContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchSection;\r\n","import {connect} from \"react-redux\";\r\nimport SearchSection from \"../components/SearchSection.js\";\r\nimport {updateSearch} from \"../actions\";\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    updateSearch: (text) => dispatch(updateSearch(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchSection);\r\n","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"../styles/CountryCard.css\";\r\n\r\nclass CountryCard extends React.Component{\r\n\r\n  render(props){\r\n    return (\r\n      <Card bg={this.props.darkmode ? \"dark\" : \"light\"} text={this.props.darkmode ? \"white\" : \"black\"} className=\"country-card\" style={{ width: '18rem' }}>\r\n        <Card.Img className=\"card-img\" variant=\"top\" style={{ height: '11rem'}} src={this.props.countryInfo.flag} />\r\n        <Card.Body>\r\n          <Card.Title>{this.props.countryInfo.name}</Card.Title>\r\n          <Card.Text>\r\n            <span><strong>Population: </strong>{this.props.countryInfo.population.toLocaleString()}</span><br/>\r\n            <span><strong>Region: </strong>{this.props.countryInfo.region}</span><br/>\r\n            <span><strong>Capital: </strong>{this.props.countryInfo.capital}</span>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountryCard;\r\n","import React from \"react\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport \"../styles/CardContainer.css\";\r\n\r\nclass CardContainer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state ={\r\n      cards: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          cards: result\r\n        })\r\n      }, error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  render(){\r\n    let deck;\r\n    if(this.props.region){\r\n      deck = this.state.cards.filter(country => country.region === this.props.region);\r\n    }else{\r\n      deck = this.state.cards;\r\n    }\r\n\r\n    if(this.props.search){\r\n      deck = deck.filter(country => country.name.toLowerCase().includes(this.props.search));\r\n    }\r\n\r\n    return (\r\n      <div className=\"card-container\" style={this.props.darkmode ? {\"background-color\": \"#212428\"} : {\"background-color\" : \"#fff\"}}>\r\n        {deck.map((country,index) => {\r\n          return <CountryCard key={index} darkmode={this.props.darkmode} countryInfo={country}/>\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CardContainer;\r\n","import {connect} from \"react-redux\";\r\nimport CardContainer from \"../components/CardContainer.js\";\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      darkmode: state.darkmode,\r\n      region: state.filter,\r\n      search: state.search\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardContainer);\r\n","import React from 'react';\nimport HeaderContainer from \"./containers/HeaderContainer.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport SearchContainer from \"./containers/SearchContainer.js\";\nimport FlagCards from \"./containers/FlagCards.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <HeaderContainer />\n      </header>\n      <SearchContainer />\n      <FlagCards />\n    </div>\n  );\n}\n\nexport default App;\n","const filter = (state=\"\", action) => {\r\n  switch(action.type){\r\n    case \"FILTER\":\r\n      return action.region\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filter;\r\n","const darkmode = (state=false, action) => {\r\n  switch(action.type){\r\n    case \"DARKMODE\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default darkmode;\r\n","const search = (state=\"\", action) => {\r\n  switch(action.type){\r\n    case \"SEARCH\":\r\n      return action.text;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default search;\r\n","import {combineReducers} from \"redux\";\r\nimport filter from \"./filter.js\";\r\nimport darkmode from \"./darkmode.js\";\r\nimport search from \"./search.js\";\r\n\r\nexport default combineReducers({filter, darkmode, search});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport {createStore} from \"redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}