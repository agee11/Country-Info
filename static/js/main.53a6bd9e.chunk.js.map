{"version":3,"sources":["components/Header.js","containers/HeaderContainer.js","actions/index.js","components/CountryCard.js","components/Search.js","components/Filter.js","containers/FilterContainer.js","components/SearchSection.js","containers/SearchContainer.js","components/CardContainer.js","containers/FlagCards.js","components/BorderLink.js","components/CountryPage.js","containers/CountryPageContainer.js","components/ContentContainer.js","App.js","reducers/filter.js","reducers/darkmode.js","reducers/search.js","reducers/index.js","index.js"],"names":["Header","props","handleDarkMode","bind","this","toggleDarkMode","Navbar","expand","bg","darkmode","variant","Brand","onClick","history","push","className","Button","id","React","Component","withRouter","connect","state","dispatch","type","CountryCard","Card","countryInfo","alpha3Code","text","style","width","Img","height","src","flag","Body","Title","name","Text","population","toLocaleString","region","capital","Search","input","handleSearch","event","updateSearch","target","value","Form","Control","placeholder","onChange","Filter","handleFilter","setFilter","document","getElementById","innerHTML","DropdownButton","title","Dropdown","Item","onSelect","eventKey","filter","SearchSection","FilterContainer","CardContainer","cards","fetch","then","res","json","result","setState","error","console","log","deck","country","search","toLowerCase","includes","map","index","key","BorderLink","code","CountryPage","nativeName","subregion","topLevelDomain","currencies","languages","borders","match","params","goBack","alt","item","length","ContentContainer","TransitionGroup","CSSTransition","location","timeout","classNames","exact","path","component","FlagCards","CountryPageContainer","App","HeaderContainer","action","combineReducers","store","createStore","rootReducer","ReactDOM","render","StrictMode"],"mappings":"qdAMMA,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,eAAiB,EAAKA,eAAeC,KAApB,gBAHN,E,6DAQhBC,KAAKH,MAAMI,mB,+BAGJ,IAAD,OACN,OACA,kBAACC,EAAA,EAAD,CAAQC,OAAO,OAAOC,GAAIJ,KAAKH,MAAMQ,SAAW,OAAS,QAASC,QAASN,KAAKH,MAAMQ,SAAW,OAAS,SACxG,kBAACH,EAAA,EAAOK,MAAR,KAAc,4BAAQC,QAAS,WAAO,EAAKX,MAAMY,QAAQC,KAAK,mBAAoBC,UAAU,SAA9E,wBACd,kBAACC,EAAA,EAAD,CAAQC,GAAG,cAAcL,QAASR,KAAKF,eAAgBQ,QAASN,KAAKH,MAAMQ,SAAW,OAAS,SAAS,uBAAGM,UAAU,gBAArH,mB,GAhBeG,IAAMC,WAsBZC,cAAWpB,GCZXqB,mBAZf,SAAyBC,GACvB,MAAO,CACLb,SAAUa,EAAMb,aAIpB,SAA4Bc,GAC1B,MAAO,CACLlB,eAAgB,kBAAMkB,ECVjB,CACLC,KAAM,iBDaKH,CAA6CrB,G,sCEXtDyB,G,2KAEGxB,GAAO,IAAD,OACX,OACE,kBAACyB,EAAA,EAAD,CAAMd,QAAS,kBAAM,EAAKX,MAAMY,QAAQC,KAAK,YAAY,EAAKb,MAAM0B,YAAYC,aAAapB,GAAIJ,KAAKH,MAAMQ,SAAW,OAAS,QAASoB,KAAMzB,KAAKH,MAAMQ,SAAW,QAAU,QAASM,UAAU,eAAee,MAAO,CAAEC,MAAO,UAC/N,kBAACL,EAAA,EAAKM,IAAN,CAAUjB,UAAU,WAAWL,QAAQ,MAAMoB,MAAO,CAAEG,OAAQ,SAAUC,IAAK9B,KAAKH,MAAM0B,YAAYQ,OACpG,kBAACT,EAAA,EAAKU,KAAN,KACE,kBAACV,EAAA,EAAKW,MAAN,KAAajC,KAAKH,MAAM0B,YAAYW,MACpC,kBAACZ,EAAA,EAAKa,KAAN,KACE,8BAAM,gDAA8BnC,KAAKH,MAAM0B,YAAYa,WAAWC,kBAAwB,6BAC9F,8BAAM,4CAA0BrC,KAAKH,MAAM0B,YAAYe,QAAc,6BACrE,8BAAM,6CAA2BtC,KAAKH,MAAM0B,YAAYgB,gB,GAX1CzB,IAAMC,YAmBjBC,cAAWK,G,gBCEXmB,E,kDAtBb,WAAY3C,GAAO,IAAD,8BAChB,cAAMA,IAEDqB,MAAQ,CACXuB,MAAO,IAGT,EAAKC,aAAe,EAAKA,aAAa3C,KAAlB,gBAPJ,E,yDAUL4C,GAEX3C,KAAKH,MAAM+C,aAAaD,EAAME,OAAOC,S,+BAIrC,OACE,kBAACC,EAAA,EAAKC,QAAN,CAActB,MAAO1B,KAAKH,MAAMQ,SAAW,CAAC,gBAAoB,UAAW,MAAS,QAAU,CAAC,gBAAoB,QAAQM,UAAU,UAAUS,KAAK,QAAQ6B,YAAY,0BAA0BC,SAAUlD,KAAK0C,mB,GAlBlM5B,IAAMC,W,gBCmCZoC,E,kDAjCb,WAAYtD,GAAO,IAAD,8BAChB,cAAMA,IAEDuD,aAAe,EAAKA,aAAarD,KAAlB,gBAHJ,E,yDAML4C,GAEX3C,KAAKH,MAAMwD,UAAUV,GAEnBW,SAASC,eAAe,mBAAmBC,UAD1Cb,GAGsD,qB,+BAMzD,OACE,yBAAKhC,UAAU,mBACb,kBAAC8C,EAAA,EAAD,CAAgB5C,GAAG,kBAAkBP,QAASN,KAAKH,MAAMQ,SAAW,OAAS,QAASqD,MAAM,oBAC1F,kBAACC,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,IAArD,oBACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,UAArD,UACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,YAArD,YACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,QAArD,QACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,UAArD,UACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,SAAU7D,KAAKoD,aAAcU,SAAS,WAArD,iB,GA3BWhD,IAAMC,WCcZE,mBAbf,SAAyBC,GACvB,MAAO,CACLb,SAAUa,EAAMb,SAChBiC,OAAQpB,EAAM6C,WAIlB,SAA4B5C,GAC1B,MAAO,CACLkC,UAAW,SAACf,GAAD,OAAYnB,EJPpB,SAAmBmB,GACxB,MAAO,CACLlB,KAAM,SACNkB,UIIgCe,CAAUf,QAI/BrB,CAA6CkC,GCD7Ca,G,6KATX,OACE,yBAAKrD,UAAU,mBAAmBe,MAAO1B,KAAKH,MAAMQ,SAAW,CAAC,gBAAmB,WAAa,CAAC,gBAAmB,SAClH,kBAAC,EAAD,CAAQA,SAAUL,KAAKH,MAAMQ,SAAUuC,aAAc5C,KAAKH,MAAM+C,eAChE,kBAACqB,EAAD,W,GANoBnD,IAAMC,YCYnBE,mBAbf,SAAyBC,GACvB,MAAO,CACLb,SAAUa,EAAMb,aAIpB,SAA4Bc,GAC1B,MAAO,CACLyB,aAAc,SAACnB,GAAD,OAAUN,ENErB,SAAsBM,GAC3B,MAAO,CACLL,KAAM,SACNK,QMLiCmB,CAAanB,QAKnCR,CAA6C+C,GCXtDE,E,kDACJ,WAAYrE,GAAO,IAAD,8BAChB,cAAMA,IAEDqB,MAAO,CACViD,MAAO,IAJO,E,gEAQE,IAAD,OAEjBC,MAAM,wCACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZN,MAAOK,OAER,SAAAE,GACDC,QAAQC,IAAIF,Q,+BAIT,IAEHG,EAFE,OAcN,OAVEA,EADC7E,KAAKH,MAAMyC,OACLtC,KAAKkB,MAAMiD,MAAMJ,QAAO,SAAAe,GAAO,OAAIA,EAAQxC,SAAW,EAAKzC,MAAMyC,UAEjEtC,KAAKkB,MAAMiD,MAIjBnE,KAAKH,MAAMkF,SACZF,EAAOA,EAAKd,QAAO,SAAAe,GAAO,OAAIA,EAAQ5C,KAAK8C,cAAcC,SAAS,EAAKpF,MAAMkF,OAAOC,mBAIpF,6BACE,kBAAC,EAAD,MACA,yBAAKrE,UAAU,iBAAiBe,MAAO1B,KAAKH,MAAMQ,SAAW,CAAC,gBAAmB,WAAa,CAAC,gBAAoB,SAChHwE,EAAKK,KAAI,SAACJ,EAAQK,GACjB,OAAO,kBAAC,EAAD,CAAaC,IAAKD,EAAO9E,SAAU,EAAKR,MAAMQ,SAAUkB,YAAauD,a,GAzC5DhE,IAAMC,WAiDnBC,cAAWkD,GC5CXjD,mBARf,SAAyBC,GACrB,MAAO,CACLb,SAAUa,EAAMb,SAChBiC,OAAQpB,EAAM6C,OACdgB,OAAQ7D,EAAM6D,UAIL9D,CAAyBiD,GCNlCmB,G,8DACJ,WAAYxF,GAAO,IAAD,8BAChB,cAAMA,IAEDqB,MAAQ,CACXK,YAAa,CACXW,KAAM,KALM,E,gEAWE,IAAD,OACjBkC,MAAM,0CAA4CpE,KAAKH,MAAMyF,MAC1DjB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZlD,YAAaiD,OAEd,SAAAE,GACDC,QAAQC,IAAIF,Q,+BAIT,IAAD,OACN,OACE,kBAAC9D,EAAA,EAAD,CAAQD,UAAU,cAAcL,QAASN,KAAKH,MAAMQ,SAAW,OAAS,QAASG,QAAS,WAAO,EAAKX,MAAMY,QAAQC,KAAK,YAAY,EAAKb,MAAMyF,QAAStF,KAAKkB,MAAMK,YAAYW,U,GA1B7JpB,IAAMC,YA+BhBC,cAAWqE,GC5BpBE,G,wDACJ,WAAY1F,GAAO,IAAD,8BAChB,cAAMA,IAEDqB,MAAO,CACVK,YACE,CACEQ,KAAM,GACNG,KAAM,GACNsD,WAAY,GACZpD,WAAY,GACZE,OAAQ,GACRmD,UAAW,GACXlD,QAAS,GACTmD,eAAgB,GAChBC,WAAY,CAAC,CAACzD,KAAM,KACpB0D,UAAW,CAAC,CAAC1D,KAAM,KACnB2D,QAAS,KAhBC,E,8DAqBAhG,GAAO,IAAD,OAEnBG,KAAKH,MAAMiG,OAEZ1B,MAAM,0CAA0CpE,KAAKH,MAAMiG,MAAMC,OAAOT,MACrEjB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZlD,YAAaiD,OAEd,SAAAE,GACDC,QAAQC,IAAIF,Q,+BAKX,IAAD,OACN,OACE,6BACE,yBAAK/D,UAAW,uBAAyBX,KAAKH,MAAMQ,SAAW,YAAc,KAC3E,kBAACO,EAAA,EAAD,CAAQD,UAAU,cAAcH,QAAS,WAAO,EAAKX,MAAMY,QAAQuF,UAAW1F,QAASN,KAAKH,MAAMQ,SAAW,OAAS,SAAS,uBAAGM,UAAU,sBAA5I,UAEF,yBAAKA,UAAW,gBAAkBX,KAAKH,MAAMQ,SAAW,YAAc,KACpE,yBAAKM,UAAU,WAAWmB,IAAK9B,KAAKkB,MAAMK,YAAYQ,KAAMkE,IAAI,SAChE,yBAAKtF,UAAU,gBACb,4BAAI,gCAASX,KAAKkB,MAAMK,YAAYW,OACpC,6BACE,2BAAG,iDAA+BlC,KAAKkB,MAAMK,YAAYiE,YACzD,2BAAG,gDAA8BxF,KAAKkB,MAAMK,YAAYa,YACxD,2BAAG,4CAA0BpC,KAAKkB,MAAMK,YAAYe,QACpD,2BAAG,gDAA8BtC,KAAKkB,MAAMK,YAAYkE,WACxD,2BAAG,6CAA2BzF,KAAKkB,MAAMK,YAAYgB,UAEvD,6BACE,2BAAG,sDAAoCvC,KAAKkB,MAAMK,YAAYmE,gBAC9D,2BAAG,gDAA8B1F,KAAKkB,MAAMK,YAAYoE,WAAWT,KAAI,SAAAgB,GAAS,OAAOA,EAAKhE,SAC5F,2BAAG,+CAA6BlC,KAAKkB,MAAMK,YAAYqE,UAAUV,KAAI,SAACgB,EAAKf,GAAW,OAAOe,EAAKhE,MAAMiD,EAAQ,EAAKjE,MAAMK,YAAYqE,UAAUO,OAAO,EAAI,KAAO,SAErK,6BACE,2BAAG,sDACAnG,KAAKkB,MAAMK,YAAYsE,QAAQX,KAAI,SAACJ,EAASK,GAAY,OAAO,kBAAC,EAAD,CAAYC,IAAKD,EAAO9E,SAAU,EAAKR,MAAMQ,SAAUiF,KAAMR,gB,GA9DpHhE,IAAMC,YAwEjBC,cAAWuE,GCvEXtE,mBANf,SAAyBC,GACvB,MAAO,CACLb,SAAUa,EAAMb,YAILY,CAAyBsE,GCHlCa,E,uKAGF,OAAO,kBAACC,EAAA,EAAD,KACH,kBAACC,EAAA,EAAD,CACElB,IAAKpF,KAAKH,MAAM0G,SAASnB,IACzBoB,QAAS,IACTC,WAAW,QAEb,yBAAK9F,UAAU,qBACb,kBAAC,IAAD,CAAQ4F,SAAUvG,KAAKH,MAAM0G,UAC3B,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,IAC9C,kBAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWE,Y,GAZrBhG,IAAMC,WAoBtBC,cAAWoF,GCPXW,MAZf,WACE,OACE,yBAAKpG,UAAU,OACb,kBAAC,IAAD,KACE,kBAACqG,EAAD,MACA,kBAAC,EAAD,S,QCHOjD,EATA,WAAuB,IAAtB7C,EAAqB,uDAAf,GAAI+F,EAAW,uCACnC,OAAOA,EAAO7F,MACZ,IAAK,SACH,OAAO6F,EAAO3E,OAChB,QACE,OAAOpB,ICIEb,EATE,WAA0B,IAAzBa,EAAwB,wDAAX+F,EAAW,uCACxC,OAAOA,EAAO7F,MACZ,IAAK,WACH,OAAQF,EACV,QACE,OAAOA,ICIE6D,EATA,WAAuB,IAAtB7D,EAAqB,uDAAf,GAAI+F,EAAW,uCACnC,OAAOA,EAAO7F,MACZ,IAAK,SACH,OAAO6F,EAAOxF,KAChB,QACE,OAAOP,ICAEgG,cAAgB,CAACnD,SAAQ1D,WAAU0E,WCG5CoC,EAAQC,YAAYC,GAE1BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJ7D,SAASC,eAAe,W","file":"static/js/main.53a6bd9e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/Header.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nclass Header extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.handleDarkMode = this.handleDarkMode.bind(this);\r\n  }\r\n\r\n  handleDarkMode(){\r\n    //Toggles the global darkmode state\r\n    this.props.toggleDarkMode();\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <Navbar expand=\"true\" bg={this.props.darkmode ? \"dark\" : \"light\"} variant={this.props.darkmode ? \"dark\" : \"light\"}>\r\n      <Navbar.Brand><strong onClick={() => {this.props.history.push(\"/Country-Info/\")}} className=\"brand\">Where in the world?</strong></Navbar.Brand>\r\n      <Button id=\"dark-toggle\" onClick={this.handleDarkMode} variant={this.props.darkmode ? \"dark\" : \"light\"}><i className=\"fas fa-moon\"></i> Dark Mode</Button>\r\n    </Navbar>\r\n  )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import {connect} from \"react-redux\";\r\nimport Header from \"../components/Header\";\r\nimport {toggleDarkMode} from \"../actions\";\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    toggleDarkMode: () => dispatch(toggleDarkMode())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","\r\nexport function toggleDarkMode() {\r\n  return {\r\n    type: \"DARKMODE\"\r\n  }\r\n}\r\n\r\nexport function setFilter(region){\r\n  return {\r\n    type: \"FILTER\",\r\n    region\r\n  }\r\n}\r\n\r\nexport function updateSearch(text){\r\n  return {\r\n    type: \"SEARCH\",\r\n    text\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"../styles/CountryCard.css\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nclass CountryCard extends React.Component{\r\n\r\n  render(props){\r\n    return (\r\n      <Card onClick={() => this.props.history.push(\"/country/\"+this.props.countryInfo.alpha3Code)} bg={this.props.darkmode ? \"dark\" : \"light\"} text={this.props.darkmode ? \"white\" : \"black\"} className=\"country-card\" style={{ width: '18rem' }}>\r\n        <Card.Img className=\"card-img\" variant=\"top\" style={{ height: '11rem'}} src={this.props.countryInfo.flag} />\r\n        <Card.Body>\r\n          <Card.Title>{this.props.countryInfo.name}</Card.Title>\r\n          <Card.Text>\r\n            <span><strong>Population: </strong>{this.props.countryInfo.population.toLocaleString()}</span><br/>\r\n            <span><strong>Region: </strong>{this.props.countryInfo.region}</span><br/>\r\n            <span><strong>Capital: </strong>{this.props.countryInfo.capital}</span>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CountryCard);\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nclass Search extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: \"\"\r\n    }\r\n\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n  }\r\n\r\n  handleSearch(event){\r\n    //Set the global search state to input value\r\n    this.props.updateSearch(event.target.value);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <Form.Control style={this.props.darkmode ? {\"backgroundColor\" : \"#343a40\", \"color\": \"#fff\"} : {\"backgroundColor\" : \"#fff\"}}className=\"flex-40\" type=\"input\" placeholder=\"Search for a country...\" onChange={this.handleSearch}/>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\n\r\nclass Filter extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.handleFilter = this.handleFilter.bind(this);\r\n  }\r\n\r\n  handleFilter(event){\r\n    //Set the global filter state to region selected\r\n    this.props.setFilter(event);\r\n    if(event){\r\n      document.getElementById(\"dropdown-button\").innerHTML = event;\r\n    }else{\r\n      document.getElementById(\"dropdown-button\").innerHTML = \"Filter by Region\";\r\n    }\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"filter-dropdown\">\r\n        <DropdownButton id=\"dropdown-button\" variant={this.props.darkmode ? \"dark\" : \"light\"} title=\"Filter by Region\">\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"\">Filter by Region</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Africa\">Africa</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Americas\">Americas</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Asia\">Asia</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Europe\">Europe</Dropdown.Item>\r\n          <Dropdown.Item onSelect={this.handleFilter} eventKey=\"Oceania\">Oceania</Dropdown.Item>\r\n        </DropdownButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import {connect} from \"react-redux\";\r\nimport Filter from \"../components/Filter\";\r\nimport {setFilter} from \"../actions\";\r\n\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode,\r\n    region: state.filter\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    setFilter: (region) => dispatch(setFilter(region))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport FilterContainer from \"../containers/FilterContainer\";\r\nimport \"../styles/SearchContainer.css\"\r\n\r\nclass SearchSection extends React.Component{\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"search-container\" style={this.props.darkmode ? {\"backgroundColor\": \"#212428\"} : {\"backgroundColor\": \"#fff\"}}>\r\n        <Search darkmode={this.props.darkmode} updateSearch={this.props.updateSearch}/>\r\n        <FilterContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchSection;\r\n","import {connect} from \"react-redux\";\r\nimport SearchSection from \"../components/SearchSection\";\r\nimport {updateSearch} from \"../actions\";\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return {\r\n    updateSearch: (text) => dispatch(updateSearch(text))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchSection);\r\n","import React from \"react\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport \"../styles/CardContainer.css\";\r\nimport SearchContainer from \"../containers/SearchContainer\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nclass CardContainer extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state ={\r\n      cards: []\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    //Grab all country information from server and store in state\r\n    fetch(\"https://restcountries.eu/rest/v2/all\")\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          cards: result\r\n        })\r\n      }, error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  render(){\r\n    //Filter cards by region if applied\r\n    let deck;\r\n    if(this.props.region){\r\n      deck = this.state.cards.filter(country => country.region === this.props.region);\r\n    }else{\r\n      deck = this.state.cards;\r\n    }\r\n\r\n    //Filter cards by search input if applied\r\n    if(this.props.search){\r\n      deck = deck.filter(country => country.name.toLowerCase().includes(this.props.search.toLowerCase()));\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <SearchContainer />\r\n        <div className=\"card-container\" style={this.props.darkmode ? {\"backgroundColor\": \"#212428\"} : {\"backgroundColor\" : \"#fff\"}}>\r\n          {deck.map((country,index) => {\r\n            return <CountryCard key={index} darkmode={this.props.darkmode} countryInfo={country}/>\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CardContainer);\r\n","import {connect} from \"react-redux\";\r\nimport CardContainer from \"../components/CardContainer\";\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      darkmode: state.darkmode,\r\n      region: state.filter,\r\n      search: state.search\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardContainer);\r\n","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {withRouter} from \"react-router\";\r\nimport \"../styles/BorderLink.css\";\r\n\r\nclass BorderLink extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      countryInfo: {\r\n        name: \"\"\r\n      }\r\n    }\r\n  }\r\n\r\n//Retrieve country information on mount in order to setup the button in render\r\n  componentDidMount(){\r\n    fetch(\"https://restcountries.eu/rest/v2/alpha/\" + this.props.code)\r\n      .then(res => res.json())\r\n      .then(result => {\r\n        this.setState({\r\n          countryInfo: result\r\n        })\r\n      }, error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Button className=\"border-link\" variant={this.props.darkmode ? \"dark\" : \"light\"} onClick={() => {this.props.history.push(\"/country/\"+this.props.code)}}>{this.state.countryInfo.name}</Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(BorderLink);\r\n","import React from \"react\";\r\nimport {withRouter} from \"react-router\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/CountryPage.css\";\r\nimport BorderLink from \"./BorderLink\";\r\nimport \"../styles/BackButton.css\";\r\n\r\n\r\nclass CountryPage extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state ={\r\n      countryInfo:\r\n        {\r\n          flag: \"\",\r\n          name: \"\",\r\n          nativeName: \"\",\r\n          population: \"\",\r\n          region: \"\",\r\n          subregion: \"\",\r\n          capital: \"\",\r\n          topLevelDomain: \"\",\r\n          currencies: [{name: \"\"}],\r\n          languages: [{name: \"\"}],\r\n          borders: []\r\n        }\r\n    }\r\n  }\r\n\r\n  componentDidMount(props){\r\n    //Grab the country code from address and pull information from the server\r\n    if(this.props.match)\r\n    {\r\n      fetch(\"https://restcountries.eu/rest/v2/alpha/\"+this.props.match.params.code)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          this.setState({\r\n            countryInfo: result\r\n          })\r\n        }, error => {\r\n          console.log(error);\r\n        })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <div className={\"back-button-section\" + (this.props.darkmode ? \" darkmode\" : \"\")}>\r\n          <Button className=\"back-button\" onClick={() => {this.props.history.goBack()}} variant={this.props.darkmode ? \"dark\" : \"light\"}><i className=\"fas fa-arrow-left\"></i> Back</Button>\r\n        </div>\r\n        <div className={\"country-page\" + (this.props.darkmode ? \" darkmode\" : \"\")}>\r\n          <img className=\"flag-img\" src={this.state.countryInfo.flag} alt=\"flag\"/>\r\n          <div className=\"country-info\">\r\n            <h3><strong>{this.state.countryInfo.name}</strong></h3>\r\n            <div>\r\n              <p><strong>Native Name: </strong>{this.state.countryInfo.nativeName}</p>\r\n              <p><strong>Population: </strong>{this.state.countryInfo.population}</p>\r\n              <p><strong>Region: </strong>{this.state.countryInfo.region}</p>\r\n              <p><strong>Sub Region: </strong>{this.state.countryInfo.subregion}</p>\r\n              <p><strong>Capital: </strong>{this.state.countryInfo.capital}</p>\r\n            </div>\r\n            <div>\r\n              <p><strong>Top Level Domain: </strong>{this.state.countryInfo.topLevelDomain}</p>\r\n              <p><strong>Currencies: </strong>{this.state.countryInfo.currencies.map(item => {return item.name})}</p>\r\n              <p><strong>Languages: </strong>{this.state.countryInfo.languages.map((item,index) => {return item.name+(index < this.state.countryInfo.languages.length-1 ? \", \" : \"\")})}</p>\r\n            </div>\r\n            <div>\r\n              <p><strong>Border Countries: </strong>\r\n                {this.state.countryInfo.borders.map((country, index) => { return <BorderLink key={index} darkmode={this.props.darkmode} code={country}/>})}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CountryPage);\r\n","import {connect} from \"react-redux\";\r\nimport CountryPage from \"../components/CountryPage\";\r\n\r\nfunction mapStateToProps(state){\r\n  return {\r\n    darkmode: state.darkmode\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CountryPage);\r\n","import React from \"react\";\r\nimport {Switch, Route, withRouter} from \"react-router\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport FlagCards from \"../containers/FlagCards\";\r\nimport CountryPageContainer from \"../containers/CountryPageContainer\";\r\n\r\nclass ContentContainer extends React.Component{\r\n\r\n  render(){\r\n    return <TransitionGroup>\r\n        <CSSTransition\r\n          key={this.props.location.key}\r\n          timeout={500}\r\n          classNames=\"page\"\r\n        >\r\n        <div className=\"content-container\">\r\n          <Switch location={this.props.location}>\r\n            <Route exact path=\"/Country-Info/\" component={FlagCards} />\r\n            <Route path=\"/country/:code\" component={CountryPageContainer} />\r\n          </Switch>\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n  }\r\n}\r\n\r\nexport default withRouter(ContentContainer);\r\n","import React from 'react';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./containers/HeaderContainer\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport ContentContainer from \"./components/ContentContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <HeaderContainer />\r\n        <ContentContainer />\r\n      </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const filter = (state=\"\", action) => {\r\n  switch(action.type){\r\n    case \"FILTER\":\r\n      return action.region\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default filter;\r\n","const darkmode = (state=false, action) => {\r\n  switch(action.type){\r\n    case \"DARKMODE\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default darkmode;\r\n","const search = (state=\"\", action) => {\r\n  switch(action.type){\r\n    case \"SEARCH\":\r\n      return action.text;\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default search;\r\n","import {combineReducers} from \"redux\";\r\nimport filter from \"./filter.js\";\r\nimport darkmode from \"./darkmode.js\";\r\nimport search from \"./search.js\";\r\n\r\nexport default combineReducers({filter, darkmode, search});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport rootReducer from \"./reducers\";\nimport {createStore} from \"redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}